[{"content":" 配置Android Rom 编译环境 Android Developer 官网上所使用的是 Ubuntu,需要安装一系列繁琐的内容，还有配置Repo 工具和路径 这里不得不说一下，Archlinux的优点 Aur,得益于此,我们仅需安装两个package,在这两个package当中包含了我们所需的所有package，在此之前我们需开启32位库\n开启32位库 sudo vim /etc/pacman.conf #[multilib] #Include = /etc/pacman.d/mirrorlist 更改为\n#[multilib] #Include = /etc/pacman.d/mirrorlist 安装所需套件 yay -S lineageos-devel android-devel ADB 工具包 在windows 系统中我们可能需要配置环境，而在 ArchLinux 当中， 我们仅需安装一个package\nsudo pacman -S android-tools 三星Odin 在Linux 系统上，我们无法使用带gui 的odin3,但是我们有odin4,这不是开玩笑而是真的有\nyay -S odin4-cli odin4 -a ~/Downloads/twrp-t2q-20240324-1620.tar -s ~/Documents/t2q_patched_vbmeta.tar # 刷twrp odn4 -h # 可以查看更多，也可以刷Rom odin4 -b BL_XXXX.tar.md5 -a AP_XXXX.tar.md5 -c CP_XXXX.tar.md5 -s CSC_XXXX.tar.md5 -d PATH_OF_DEVICE_A # 刷固件 Pixel 刷官方固件 Pixel 有两种途径刷写官方固件，一个是OTA包，另一个是工厂镜像 factory image OTA Factory Image 开启USB 调试 设定=\u0026gt;关于手机=\u0026gt;版本号, 连续点版本号5,6次进入开发者模式\n设定=\u0026gt;系统=\u0026gt; 开发者选项=\u0026gt;USB 调试 ，选择开启\n将手机使用USB线连接到笔电上，在手机上允许USB 调试\nadb devices\nOTA adb reboot recovery 当你看到一个 Android 机器人，按住电源键再点击音量增加键，使用音量键选择Apply Upldate From ADB, 再使用电源键确定\nadb sideload path_to_OAT.zip Factory Images 下载工厂镜像并解压，进入其文件夹,连接手机到笔电\nadb reboot bootloader #重启至Bootloader模式 bash flash-all.sh ","date":"2024-05-09T00:54:15+08:00","image":"https://blacklu.cc/p/android-rom-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/Factory_image_hufae30d1c5b09df65bdfbb9ac1a1c4fee_173784_120x120_fill_box_smart1_3.png","permalink":"https://blacklu.cc/p/android-rom-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/","title":"Android Rom 基础配置"},{"content":"前言 原本我想借编程随想文章的标题 学习与人生 ,但仔细想想还是算了,这篇文章我并不想过多叙述, 本想用这几天的感想带过这篇文章,但斟酌片刻之后便打消此念头,还是要写一些内容\n读书 来自新世界 在四月,我读完了 来自新世界 这本书,这本书主要讲了一些觉醒超能力的人类掀起了凡人与超人的战争,最后超人完胜,随着超人获胜,超人发现他们每个人都是一颗定时的原子弹,便通过基因改造的技术加入了槐死机制的基因 =\u0026gt;只要杀死同类自己便一同死去;世界上仅存的人类分佈零散分佈在世界各地,他们大多数组成乌托邦式的部落,而书中的日本分爲9个部落,各个部落几乎不联络,过得与世隔绝的生活,生活的方方面面都有伦理委员会支配,只有内部人员才会知道他们彼此的身份,伦理委员会害怕出现异类从而危害整个部落,他们不会把不满18岁的人当作完整的人,若未成年期间出现异样,他们便会抹去其存在;超人统治世界的同时,一批进化成人形态的化鼠爲新一代人类任劳任怨并成爲他们的奴隶,他们除了长得像老鼠且丑陋与人类并无多少差异,实际上他们是没有超能力的人类;后来化鼠从小偷窃并培养人类的婴儿,让他们认爲自己是化鼠,未来并运用于战场上,人类无法攻击化鼠培养的人类,而人类可以.最后,主角拯救了所有人打败了化鼠,但是化鼠也是人类的祕密,只有少数人知道. 在网络上很多人说是反乌托邦小说,实际上也是反殖民.\nCSAPP CSAPP 中文翻译深入理解计算机系统准确来说是以程序员视角瞭解计算机,书的第一章,自己完完整整地看完了,但是第二,第三是通过视频完成了,一章大概100页,一页一页地看实在是太累太耗时间了,或许我应该考虑精读\n刷题 上一週,我基本每天刷几道leetcode 题,但最近都没怎麽刷, 应该考虑刷几道,毕竟我甚至不熟悉一些算法\n情感 原则上我是不会写这方面的内容,但正是因爲Darling 昨晚一句 ** 我可以看看吗**, 我写了一晚上; 有个人在牵挂着,我写Blog 也有一定的动力;最近些日子Darling 在忙碌着她的作业与论文,而我总是显得无所事事,无忧无虑,前几天她主动找我而我刚好和室友开一把游戏,我让她等20分钟,实际上这时间是40分钟,最后她去忙她的作业了,我对此感到十分懊悔;那天晚上她更新了她的头像,我看到她开心的样子莫名感到心酸,让我想起了那句话 \u0026ldquo;任何肌肉太过用力都会因爲在分解释放能量时缺氧而形成乳酸,于是就会有酸痛感, 那麽内心的那些满满的酸楚,也是因爲太过用力吗\u0026rdquo;. 我很享受和Darling的时光, 因爲有她,我心会莫名地感受到一种不知道如何形容的感觉,或者这就是爱情,你看不到它的存在也摸不到,但是你可以感受到. 我希望可以陪她多一些时间,也希望她坚强一些,不要捉个无法登陆考试就哭的爱哭鬼;3 ,也希望她健健康康,开开心心.早安,亲爱的,你还好吗 爱你的卢致上\n结语 卢要多写一些文章,把这些类似的文章复盖掉,不然我的Blog 要变成和Darling的恋恋笔记本了\n","date":"2024-05-04T08:03:05+08:00","image":"https://blacklu.cc/p/%E5%9B%9B%E6%9C%88%E7%9A%84%E6%80%BB%E7%BB%93--to-darling/imposter_factory_huda4c57261821735b7299c99bde243fc3_369115_120x120_fill_q75_box_smart1.jpg","permalink":"https://blacklu.cc/p/%E5%9B%9B%E6%9C%88%E7%9A%84%E6%80%BB%E7%BB%93--to-darling/","title":"四月的总结--To Darling"},{"content":"缘起 原本有一篇文章是关于如何使用github page 搭建部落格,由于配置系统的时候丢失了,故今日快速重写一篇,顺便藉此提高自己写作的速度,下载就以stack 爲例\n准备 准备一个github 账户,如果没有就注册一个 创建两个repo, 一个名爲hugo-stack, 另一个爲github.用户名.\u0026gt; 安装hugo Windows 系统可以参考此链接 或者官方文档 ArchLinux: sudo pacman -S hugo 其他发行版使用自带包管理工具直接安装 hugo即可 开始 生成一个hugo 工作资料夹 1 hugo new site hugo-stack # hugo-stack 爲资料夹名称 初始化repo及将stack 主题以submodule形式clone到本地 1 2 git init git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack 将stack 主题的配置copy 到根目录 1 2 3 4 5 6 7 8 cp -r themes/hugo-theme-stack/exampleSite/content ./ cp -r themes/hugo-theme-stack/exampleSite/config.yaml ./ cp -r themes/hugo-theme-stack/archetypes ./ cp -r themes/hugo-theme-stack/data ./ cp -r themes/hugo-theme-stack/assets ./ cp -r themes/hugo-theme-stack/i18n ./ cp -r themes/hugo-theme-stack/layouts ./ cp -r themes/hugo-theme-stack/assets ./ 运行博客 hugo server -D 在终端按住Ctrl 键点击 http://localhost:*/ 开啓预览网站,或者複製 http://localhost:*/ 粘贴到浏览器开啓,* 代表系统分配的端口名 简单配置Blog 按需修改以下配置,添加到根目录的config.yaml\n默认语言与域名配置 1 2 3 4 5 6 7 baseurl: https://github.用户名.io ## hugo 生产静态网页存放的域名 languageCode: en-us theme: hugo-theme-stack paginate: 5 defaultContentLanguage: zh-tw # 默认语言 title: Black Lu # 标题 修改副标题和头像 1 2 3 4 5 6 7 sidebar: emoji: 🍥 subtitle: 我的语言之局限，即是我的世界之局限 # 副标题 avatar: enabled: true local: true src: img/avatar.png #头像存放在根目录的 assets/img 下 添加最后更新与 字段 1 2 3 dateFormat: published: Jan 02, 2006 lastUpdated: Jan 02, 2006 15:04 MST 推送到远程repo 将目录推送到 hugo-stack repo 1 2 3 4 5 6 git init git add . git commit -m \u0026#34;Intitial commit\u0026#34; git branch -M main git remote add orgin git@github.com:LucasBlackLu/hugo-stack.git git push -u origin main 将 Pulic 的内容推送到 github.用户名.io repo 1 2 3 4 5 6 7 cd public git init git add . git commit -m \u0026#34;Intitial commit\u0026#34; git branch -M main git remote add orgin git@github.com:LucasBlackLu/lucasblacklu.github.io.git git push -u origin main Public 资料夹里面的是构建静态网页的资源,直接push 到 github.用户名.io Repo, 在浏览器输入 github.用户名.io 即可查看你部署好的Blog 注意事项 Page Bundle hugo使用Page Bundle 的文件结构，如下\n1 2 3 4 5 6 tree archlinux_install /archlinux_install ├── arch.png ├── etcher.png └── index.md 新建文章命令爲 1 hugo new post/new_post/index.md # new_post 改成你文章的英文名字 结语 本文主要是爲填补以前挖下的坑,剩下的坑还有git, rom 编译等,祝各位好运\n参考与致谢 在 GitHub 部署 Hugo 静态网站 如何在 Windows 系统上快速安装 Hugo Hugo 官方文档 ","date":"2024-05-04T05:05:04+08:00","image":"https://blacklu.cc/p/hugo--github-page-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E9%83%A8%E8%90%BD%E6%A0%BC/pawel_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://blacklu.cc/p/hugo--github-page-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E9%83%A8%E8%90%BD%E6%A0%BC/","title":"Hugo + Github Page 快速搭建部落格"},{"content":"起因 在我尚未上高中时候，在群组里就有人直接使用路由器进行翻牆上网，当时就十分好奇如何实现\n原理是在路由层面进行网路代理，从而免去终端设备使用vpn等进行代理也不易被检测，可以理解爲更高层次的代理手段; 且大多数需要自行刷官改固件或第三方固件 只可惜当时家里的路由器老旧且无第三方修改固件，且年纪尚轻并无过多金钱置买较好的路由器，上高中之后父母商议与诺更换家里老旧的路由器 红米 AX5路由, 后面才得知需要笔电或者是带无线网卡的电脑才可以刷固件，遂放弃;后面大学时候拥有人生第一臺笔电，但很少时间待在家里便不再折腾\n准备 在koolcenter 搜寻RT-AC86U并下载固件 开啓MerlinClash ,查看自己设备支持的软体版本,进入Telegram 群组 下载对应版本的插件 配置 接上电源，然后用牙籤或者针插入路由器背后的Reset 小孔长按大约30s恢復出厂设定 按照官方文档连接网路，如下图 ！doc [如果你与我一样使用烽火CPE，仅需使用网线将烽火的LAN口连接到路由的WAN口] 电脑端在浏览器输入 192.168.50.1,也可以手机连接RT-AC86U的WiFi 同样在浏览器输入192.168.50.1,进行网路设定 刷机 在chromium 内核的浏览器输入 192.168.50.1 进入路由器管理页面, 系统管理=\u0026gt; 固件升级,点击上传固件选择下载的固件,此过程需要耐心等待 完成之后, 系统管理=\u0026gt;系统设定, 选择开啓 \u0026ldquo;Format JFFS partition at next boot\u0026rdquo;, 和\u0026quot;Enable JFFS custom scripts and configs\u0026quot;,下滑到页面最后点击应用本页面设定 [安装插件需要软体中心, 而软体中心需要开啓 JFFS 设定] 插件安装 软体中心 =\u0026gt; 手动安装 =\u0026gt; 离线安装插件安装 =\u0026gt; 选择文件, 选择已下载的 MerlinClash 插件 [软体中心=\u0026gt; 全部软体 可以在线安装插件,软体中心=\u0026gt; 手动安装, 离线安装插件即安装软体中心没有的插件] 配置 MerlinClash 下载ClashVerge 或者是其他的pc端Clash, 订阅导入 你的订阅链接 右键点击打开文件,找到其.yaml 文件所在位置,複製到其他目录并重命名爲*.ymal, *要求15个字符以内 软体中心 =\u0026gt; 已安装 =\u0026gt; MerlinClash =\u0026gt; 打开=\u0026gt; 配置文件-Clash-Yaml配置下载 复制你的订阅链接,并粘贴到旁边的输入框内,如图所示,并重命名(命名)你的订阅,我的是nu,然后点击Clasn 订阅即可保存订阅文件 回到首页配置,配置文件选择你重命名的配置文件,选择保存\u0026amp;重启即可 以上配置完成后,基本上可以满足普通用户需求 高阶配置 点击访问 YACD-Clash 面板可访问Clash的后台,选择Proxies 可以选择不同模式下不同地区的节点,如一些网站ban 日本IP,我们可以选非日本的IP 详细配置可查看官网配置 参考及致谢 固件下载 获取插件的Telegram 群组 固件刷写教程 插件配置教程 ","date":"2024-05-03T21:18:02+08:00","image":"https://blacklu.cc/p/%E5%8D%8E%E7%A1%95-rt-ac86u-%E9%85%8D%E7%BD%AE/AC86U_hu04da5977f4f2cc7d3dbbf8f84ab951f6_5978_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"https://blacklu.cc/p/%E5%8D%8E%E7%A1%95-rt-ac86u-%E9%85%8D%E7%BD%AE/","title":"华硕 RT-AC86U 配置"},{"content":"缘起 在部署完成博客之后一直有对Blog进行大改的想法，无奈自己懒惰的缘由以及stack 主题有一些小问题导致问题一直遗留至今\n问题 Stack 主题在content里面的内容会与根目录下的文件冲突，而现在已经没有类似的问题，配置方式如下\n1 2 3 4 5 6 7 8 cp -r themes/hugo-theme-stack/exampleSite/content ./ cp -r themes/hugo-theme-stack/config.yaml ./ cp -r themes/hugo-theme-stack/archetypes ./ cp -r themes/hugo-theme-stack/data ./ cp -r themes/hugo-theme-stack/assets ./ cp -r themes/hugo-theme-stack/i18n./ cp -r themes/hugo-theme-stack/layouts ./ cp -r themes/hugo-theme-stack/assets ./ 头像存放在根目录的 assets/img 资料夹内,一些配置需要自己配置config.yaml 修改 此次Blog修改主要借鑑自Hugo Stack主题装修笔记 和Stack主题的自定义 ，本人只借鑑部分内容且大部分内容爲複製粘贴就不一一叙述了，详情请仔细浏览上面的链接\n参考及致谢 Hugo stack 主题 Hugo Stack主题装修笔记 Stack主题的自定义 ","date":"2024-05-03T05:12:33+08:00","image":"https://blacklu.cc/p/hugo-stack-%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/hugo_hud8e8095028aee5d3955c996bc629e075_99747_120x120_fill_box_smart1_3.png","permalink":"https://blacklu.cc/p/hugo-stack-%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/","title":"Hugo Stack 主题魔改"},{"content":"合并两个有序链表 1,初始时,合并的链表 preHead 为空\n1 2 3 ListNode* preHead = new ListNode(0); ListNode* prev = preHead; 2,设定边界,比较 l1​与 节点的值,若l1​ 的值小于于 l2​的值则 pre的 next 指针指向 l1​,更新 l1​ 的位置为l2​的 next指针指向的位置,否则将 prev 的 next 指针指向 l2，并将 l2 的位置更新为 l2 的下一个节点,将 l1,l2视为一个节点而不是 链表\n‍\n‍\n1 2 3 4 5 6 7 8 9 10 while (l1 != nullptr \u0026amp;\u0026amp; l2 != nullptr) { if (l1-\u0026gt;val \u0026lt; l2-\u0026gt;val) { prev-\u0026gt;next = l1; l1 = l1-\u0026gt;next; } else { prev-\u0026gt;next = l2; l2 = l2-\u0026gt;next; } prev = prev-\u0026gt;next; } 3,此时，l2​ 已经为空，因此直接将 l1​ 的剩余部分连接到 prev​ 上。\n1 2 3 4 5 6 7 8 9 10 11 12 // 处理剩余节点： 若其中一个链表已经遍历完毕，则直接将另一个链表的剩余部分连接到 prev 上 prev-\u0026gt;next = l1 == nullptr ? l2 : l1; // 这行代码的逻辑可以理解为： if (l1 != nullptr) { prev-\u0026gt;next = l1; } if (l2 != nullptr) { prev-\u0026gt;next = l2; } # 返回指向合并后链表的第一个节点的指针，以完成合并两个有序链表的函数，并将合并后链表的头节点返回供调用者使用 return preHead-\u0026gt;next; ‍\n","date":"2024-03-23T00:00:00Z","permalink":"https://blacklu.cc/p/%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8/","title":"合并两个有序链表"},{"content":"前言 过去几个月当中，我搭建部落格都是使用Github Page的方式搭建且域名无法自定义，从朋友中得知可以用CloudFlare搭建，不仅简单且可以自定义域名，那我们开始吧\n部署 GitHub Page 使用Hugo框架快速部署Meme主题的部落格非常容易。我原本是採用GitHub Page的形式，只需要几步就能成功部署。我自己的部落格也是用这个方式搭建，不过自定义域名要花点心思（PS：我自己也没整自定义域名，不想花钱买）\n参考在 GitHub 部署 Hugo 静态网站 CloudFlare 在和Atom的通话中得知，耗子的部落格也是使用CloudFlare託管的，所以我们便打算使用Cloud Flare託管\n购买域名 可以在Name Cheap 或者Name Silo 购买域名，我们是在Name Cheap上买的域名；如果是我会在Name Silo，因为可以直接用支付表买单。\n配置DNS 由于我们是使用CloudFlare Page 託管我们的网站，所以域名购买之后需要使用Could Flare解析，解析域名可能需要一定的时间请耐心等待\n参考 在CloudFlare上解析自己的域名 部署部落格 部署部落格需要一个GitHub Repo，Public或者Private都可以，使用CloudFlare 还有一个好处就是可以自定义二级域名\n参考 Cloudflare Pages 提供无限流、无限容量，免费网页空间，同时还可绑定自己的网域名称架设教学 Post文注意事项 Page Bundle 我们都是用markdwon档案，语法基本上大家都熟悉就不过多描述，主要是说明我们要使用Page Bundle 的形式，而不是简单地写个md档案。特别是针对有普通的文章，如下\ntree archlinux_install /archlinux_install ├── arch.png ├── etcher.png └── index.zh.md 多语言 由于使用了Hugo的多语言配置，所以我的部落格content内容有所改变，如下\ntree content /content ├── en ├── vi ├── zh-tw └── zh-cn 总结 以上就是本篇文章的所以内容，引用内容有点多，但实际操作并不口难，熟悉之后便可半小时之内完成，写这篇文章对于不太习惯写作的我而言，可能就要更长对时间了，感谢你花时间看完我的博客，希望这篇文章能够给你带来一些启发和帮助。\n","date":"2023-07-31T00:00:00Z","image":"https://blacklu.cc/p/%E4%BD%BF%E7%94%A8cloudflare-page-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/cloudflare_page_hu5054031d3ab24de388b3c7dbfa85f7ca_16941_120x120_fill_box_smart1_3.png","permalink":"https://blacklu.cc/p/%E4%BD%BF%E7%94%A8cloudflare-page-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/","title":"使用Cloudflare Page 搭建博客"},{"content":"前言 近一些天，发现自己不仅失眠而且注意力分散，且无法专注看完一本\n失眠 最近老是失眠，以前的时候是下午睡觉然后在晚上敲敲代码，编译系统去看看有什麽 Bug 需要修或者去 pick 别人的代码，现在完全不行了，彷彿是日夜颠倒，成功过上美国人的生活，但身体和精神状况却越来越糟；甚至成了旷课大王，真的是恶梦啊\n2024.5.4 其实失眠也没那麽可怕,假如睡不着就找一些事情做,保持充足的睡眠时间即可; 最好的睡眠方法是让自己疲惫; Rom 编译的事情可以留在白天在做,给自己一个安稳的睡眠吧\n注意力分散 这个问题已经是老生常谈，在互联网下充斥着短视频和社交媒体，很难集中精力学习。以前我以为是短视频所以戒掉 Tiktok 之类的短视频 App 或者关掉其功能；短视频，使得人们难以摆脱这种短暂的刺激，导致注意力分散和学习效果不佳。\n假如因爲其他事情而导致注意力分散,那麽先做完其他事情吧,不然一心二用只会竹篮打水\u0026ndash;一场空\n不论我用手机还是笔记本看书在都会感觉到困，但是在晚上看手机却不会，不知道怎麽回事，可能是 OLED 萤幕的问题？ 看书最好不要疲惫\nHaskell 言归正传，注意力分散实际上就是专注力下滑，如我之前一直在学的 Haskell，我从 YouTube 上面发现了Learn You A Haskell For Great Good 这本书就开始看了一週时间，大致懂了，但是还是无法解开 exercism 练习题裡麵的第二题；后来，在 Telegram 上面的某个群组裡麵得知学 Haskell 建议去 看 [The Real World Haskell ]（https://rwh.readthedocs.io/en/latest/）；\n虽然他说 Rust 写起来比 Haskell 更好 但是我是主要是想通过学 Haskell 学习 Functional Program，因此还是会选择 Haskell 作为学习语言。 Haskell 确实是很好的学习 Functional Program 的语言，只是 Rust 也有其独特的优势。我觉得都可以试试看，根据个人兴趣和需求做决定。值得一试的语言，多学习才能拓宽自己的视野。此注释由 AI 生产出。 与其专研一些独树一帜的编程语言不错,但还是得把握好学习的重心\n反思 最近失眠已经影响到日常的课程和自己的生活作息，所以需要加以调整，不然容易形成不好的习惯；加上自己的注意力分散，学不到什麽东西，只能虚度光阴，现在还在谋求解决方案 方法其实心里已经知道,只是没有下定决心去做; 事情进度慢一些也无妨,至少比什麽都不做好\n","date":"2023-07-31T04:37:58+08:00","image":"https://blacklu.cc/p/%E5%A4%8F%E6%97%A5%E4%B9%8B%E6%83%91/photo_2023-12-11_01-36-08_hu9ff7ba776453248539ee3997c5e3c952_56613_120x120_fill_q75_box_smart1.jpg","permalink":"https://blacklu.cc/p/%E5%A4%8F%E6%97%A5%E4%B9%8B%E6%83%91/","title":"夏日之惑"},{"content":"前言 最近在瞎折腾，什麽内核啊，再什麽onedrive网盘，还有什麽自定义域名当邮箱，反正是屁事一堆，什麽都是做一半;\n落实 明天打算把onedrive整了，然后再看看吧，email差不多可以了，可以装装门面\n感想 最近几天，真的很感谢Darling陪我，有时候啥也不想干或者没有动力，每次和Darling交谈之后心情都变得很愉悦，而且满血復活;希望Darling身体无恙，开心每一天。\n","date":"2023-05-26T05:02:28+08:00","image":"https://blacklu.cc/p/%E8%BF%99%E5%87%A0%E5%A4%A9%E7%9A%84%E6%84%9F%E6%83%B3/photo_2023-05-13_21-54-26_hu7a4131a4c9a2df158e1444246d7033e6_85295_120x120_fill_q75_box_smart1.jpg","permalink":"https://blacklu.cc/p/%E8%BF%99%E5%87%A0%E5%A4%A9%E7%9A%84%E6%84%9F%E6%83%B3/","title":"这几天的感想"},{"content":"前言 本来有写这个博客的想法，但无奈最近时间比较忙 一心想去编译Samsung内核，中间一波多折.\n故一拖再拖。幸好最近内核的进程一直搁置，我就打算今晚扔到Stackoverflow然后收获一堆downvote，或者去XDA看看。\n材料准备 电脑，U盘各一个，在ArchLinux官方 选择镜像站下载镜像，用Etcher 制作启动U盘\nEtcher 有个非常好的优点——全平台兼容，酱紫就不怕出现在Linux很难制作Windows启动U盘的尴尬场面。 安装步骤 制作启动盘 打开Etcher 直接选择iso文件再选择U盘安装即可 进入BIOS 每个主板或笔电进入BIOS的方法,各不相同故请自行Google 记得在BIOS里面关闭secure boot\n连接网路 有线网路 接上网路，稍等片刻即可\n无线网路 iwctl #进入无线网路工具 device list # 列出网路设备 通常为Wlan0 station wlan0 scan #扫描无线网路 station wlan0 get-networks #列出可用无线网路 station wlan0 connnect WiFiname WiFiname 为WiFi 名称，输入一部分可用Tab补全，然后输入密码回车，最后输入exit退出 测试网路连接是否正常 ping www.bing.com 设置镜像网站 把我们要设定的镜像站放在前面\n使用上下左右键移动，按i输入文字，改好后按Esc，再输入「:wq」退出VIM 如果真的不会如何使用vim那就Google一下再回来吧 vim /etc/pacman.d/mirrorlist #打开文件按需求把下面的源加进去 中国大陆用户设定清华源和中科大即可\n#China Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch 分割磁盘 archlinux安装需要分三个分区\nefi分区 512MB.\nswap分区 运存的60% # 看个人运存而定\n主分区 剩余部分即为主分区 .\n下面将会用cfdisk分割磁盘，efi分区格式type为 EFI Ssystem，Swap分区为Swap System，主分区为Lnux System\ncfdisk /dev/nvme0n1 #执行分割分区大小，类型 fdisk -l # 查看分区情况 配置分区 mkswap /dev/nvmexn1p2 # 格式化 swap 分区 mkfs.vfat /dev/nvmexn1p1 #格式化EFI分区 mkfs.btrfs -L ArchLinux /dev/nvmexn1p3 # 格式化主分区为ext4 mount -t btrfs -o compress=zstd /dev/nvmexn1p3 #挂载主分区到/mnt, 为创建子卷做准备 btrfs subvolume create /mnt/@ # 创建 / 目录子卷 btrfs subvolume create /mnt/@home # 创建 /home 目录子卷 unmount /mnt 挂载分区 mount -t btrfs -o subvol=/@,compress=zstd /dev/nvmexn1p3 /mnt # 挂载 / 目录 mkdir /mnt/home # 创建 /home 目录 mount -t btrfs -o subvol=/@home,compress=zstd /dev/nvmexn1p3 /mnt/home # 挂载 /home 目录 mkdir -p /mnt/boot # 创建 /boot 目录 mount /dev/nvmexn1p1 /mnt/boot # 挂载 /boot 目录 swapon /dev/nvmexn1p1 # 挂载交换分区 fdisk -l #查看分区挂载是否正确 使用pacstrap安装基本Linux base、linux pacstrap /mnt linux linux-firmware linux-headers base base-devel vim btrfs-progs 生成fstab genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 检视挂载状况 cat /mnt/etc/fstab chroot到系统。 arch-chroot /mnt 设定主机名和时区 首先在/etc/hostname设定主机名字 vim /etc/hostname #输入ArchLinux 再:wq保存退出即可 ArchLinux 为主机名\n在vim /etc/hosts配置hosts 127.0.0.1 localhost ::1 localhost 127.0.1.1 ArchLinux.localdomain ArchLinux 设定时区 ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime # 设定台北为时间同步时区 二选一 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime # 设定上海为时间同步时区 硬体时间 用命令将同步时间设定到硬体\nhwclock --systohc 安装微码 pacman -S intel-ucode # Intel pacman -S amd-ucode # AMD 设定locale 编辑 /etc/locale.gen，去掉 en_US.UTF-8 UTF-8 以及 zh_CN.UTF-8 UTF-8 tw_CN.UTF-8 UTF-8\nvim /etc/locale.gen locale-gen 在 /etc/locale.conf 设定为英文，防止乱码\necho 'LANG=en_US.UTF-8' \u0026gt; /etc/locale.conf 安装桌面程式 安装基本软件 pacman -S sudo networkmanager vim firefox noto-fonts-cjk noto-fonts-emoji pacman -S xorg xorg-server pipewire nvtop pacman -S fcitx5-im fcitx5-chewing fcitx5-qt fcitx5-gtk fcitx5-chinese-addons # 输入法 pacman -S git openssh fakeroot base-devel pacman -S sof-firmware alsa-firmware alsa-ucm-conf #声卡 安装gnome 桌面 pacman -S gnome gdm 安装KDE桌面 pacman -S sddm plasma-meta kde-applications plasma-wayland-session sddm 为kde桌面的登录管理器，而gdm为gnome的， 两个桌面二选一即可 为Root用户设定密码 passwd root 配置Root用户默认编辑器 在git 和visudo archlinux会使用vi而不是vim，有时候会出错，所以需要设置默认编辑器 vim ~/.bash_profile export EDITOR='vim' 创建普通用户 username 为用户名，可自行改成自己的名字如 black useradd -m -G wheel -s /bin/bash username passwd user # 设定普通用户密码 给予普通用户sudo权限 EDITOR=vim visudo # 设定visudo的编辑器为vim,上面的配置尚未生效 找到这行#%wheel ALL=(ALL:ALL) ALL，并把前面的注释符 # 去掉 设置开机服务 systemctl enable gdm.service #gnome桌面需要 systemctl enable NetworkManager.service #网络管理器,连接网络所需 systemctl enable sshd.service #ssh服务 sudo systemctl enable --now bluetooth 安装引导程式 安装对应的软体 pacman -S grub efibootmgr 安装grub 到EFI分区 grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ARCH 生成grub所需文件 grub-mkconfig -o /boot/grub/grub.cfg 系统安装完成。退出chroot，取消挂载，重启 exit umount /mnt reboot 重启 _\n系统后续安装优化 配置中文输入法 sudo vim /etc/environment 把下面这几行加入即可\nGTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx SDL_IM_MODULE=fcitx GLFW_IM_MODULE=ibus 在桌面打开 fcitx5 搜索拼音(Pinyin)添加即可 pacman软件管理器使用方式 pacman 相当于ubuntu 的apt-get,此节列出Arch Linux的套件管理员pacman的常用指令。\n搜索线上仓库软件\nsudo pacman -Ss \u0026lt;软件名称\u0026gt; 用此指令安装软件\nsudo pacman -S \u0026lt;软件名称\u0026gt; 卸载软件\nsudo pacman -R \u0026lt;软件名称\u0026gt; 以下指令会更新整个系统的软件。因为Arch Linux是滚动发行版，建议每半个月进行一次全系统更新。更新前建议看ArchLinux官方的新闻有无更新注意事项。\nsudo pacman -Syu 强制同步软件库。某个软件无法下载的时候才执行此指令。\nsudo pacman -Syuu 删除本机软件快取\nsudo pacman -Sc 查看本地已安装软件\nsudo pacman -Qt 安装AUR 助手 AUR (Arch User Repository) 是Arch Linux官方软件库以外的主要软件来源。AUR没有收录套件档案，只有编译软件的设定档。AUR软件最直接的装法是手动git clone远程仓库，再用makepkg指令打包安装。\n但是这样太麻烦了，所以我们通常会安装一个AUR Helper来自动化处理，我使用Paru，语法跟pacman很像\nsudo pacman -S --needed git base-devel git clone https://aur.archlinux.org/paru.git cd paru makepkg -si Paru 安装软件\nparu -S google-chrome # 按下Enter同意安装，并按照萤幕提示输入密码 Paru 移除软件件\nparu -R google-chrome 更新所有AUR套件，并顺便更新整个系统的套件：\nparu -Syu Clash for windows 代理软体 开启Clash for windows GitHub仓库 ，下载含linux字符文件并解压运行cfw即可，如有不明之处可查看官网 Clash for Windows 已删库,我们使用clash-verge-rev paru -S clash-verge-rev-bin\n自用gnome 插件 安装 gnome 插件管理器\nparu -S gnome-browser-connector 开启32位库支持 vim /etc/pacman.conf 仅需把下面两行前面的#去掉,输入:wq保持并退出即可,然后强制更新整个系统\n#[community] #Include = /etc/pacman.d/mirrorlist sudo pacman -Syyu #更新系统 Android 刷机工具 sudo pacman -S android-tools blur-my-shell 模糊抽屉界面不再是灰色~\nCaffeine 禁用荧幕保护和自动暂停\nClipboard Indicator 剪贴板管理器，记录你复制过的内容\nCoverflow Alt-Tab 此插件可以实现Mac系统的快速切换任务且自带流畅切换动画\nDash to Dock 固定Dock栏，gnome在某次更新砍了这个功能\nExtension List 在状态栏开启插件清单\nOpenWeather 在顶栏显示天气状况\nVitals 一个很好用的插件可快速查看系统的CPU，Ram，存储占用状况\n文章引用 Arch Linux安装教学，KDE Plasma桌面＋中文输入法 archlinux 基础安装 如果你感觉Arch很耗电，可以看看这篇文章 ","date":"2023-05-23T14:33:51+08:00","image":"https://blacklu.cc/p/archlinux%E5%AE%89%E8%A3%85/arch_hu56f17c9044ea99b37c05eb2feb8e32e6_299626_120x120_fill_box_smart1_3.png","permalink":"https://blacklu.cc/p/archlinux%E5%AE%89%E8%A3%85/","title":"ArchLinux安装"},{"content":"前言 早在去年初旬，我就创建了一个Github Pag，打开就一个空白页面，留下一行字“Lucasblacklu.github.io”，那时候并不知晓什么主题也不懂什么Hexo,Hugo。后来，去年刚开学不久看到班上的同学在show他的Blog，于是便粗略的看了一下，自己并没有什么想法去搭建；直到后来，在班上的老师展示他的Blog，用hexo和js搭建的，后来便开始了，我自己摸索搭建Blog。刚开始慢慢看教程，然后不断碰壁，一开始我看到的优质教程是RemBlog的教程 以及啓发RemBlog的教程 ,也就是因爲这个教程，我懂得了如何搭建Hugo Blog，也就是从这里开始我爱上Hugo的快速部署，而不是Hexo的丰富且美观的主题。\n一波多折 前面谈到Hugo快速，但是缺乏优质主题，毕竟颜值是第一动力，后来我挑了很多个主题，一开始是这个主题stack，但是由于自己不会如何配置，遇上很多问题，例如部署出来的Blog没有正确显示主题，也就是CSS配置出错，但我当时并不知道什么是CSS，后来又试了好几个，最后折腾到凌晨，无奈只好选择一个简单的主题。之后，我在一个telegram看到一个教程 教人使用三个仓库，自动化部署Blog仅需上传markdown文件即可，这对于当时并不瞭解Github Action和Workflow的我，无疑是巨大的诱惑，然后我按照他的教程试了好久还是不行，我甚至都不知道设定Token,后来也就不了了之，之前问过他里面的bash脚本怎么使用（还包括sed命令），可是我现在只看懂一些。也是因爲此，于是我便下定决定要搭建个Hugo+Github Action(Github Action暂时出问题，暂时用回两个仓库的方式) 的自动化部署Blog,后来在Workflow的多次踩坑当中学会了如何使用Token,加上那段时间在折腾Rom 编译学会了不少Git和一些Linux 命令。\n最后 我爲什么又选择这个主题，是因爲之前在Hugo Shoka碰壁发现，很多是自己的问题，加上我有认识不同国家的人，而Stack支持多语言输出，只需要写出一篇中文文章，把他发给chatgpt可以帮忙去润色，再创建其他语言的markdown文件，例如我原始文件是index.md，英文的则是index.en.md。人的慾望是难以满足的，最后我是再三抉择才决定使用Stack主题，未来有更好的，可能是我会选择迁移到新的主题或新的驱动。再者是爲什么我默认语言选择繁体中文，别问,问就是延续之前的我之前传统\n更新 其实博客主题什么的都不重要,重要的内容,内容足够好自然可以吸引读者,延续一直以来用的博客即可,太累或太懒不想折腾,一昧追求更好看,性能更好或者是其他需求的主题,反而使其写博客的本心,\n","date":"2023-03-18T22:07:31+08:00","image":"https://blacklu.cc/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%BA%A6%E6%88%96%E4%B8%8D%E6%98%AF/Hello-World_huac6442c03371f05f20e9ed69e0c98107_925974_120x120_fill_q75_box_smart1.jpg","permalink":"https://blacklu.cc/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%BA%A6%E6%88%96%E4%B8%8D%E6%98%AF/","title":"第一篇文章亦或不是"}]