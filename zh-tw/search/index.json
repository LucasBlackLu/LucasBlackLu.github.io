[{"content":"配置Android Rom 編譯環境 Android Developer 官網上所使用的是 Ubuntu,需要安裝一系列繁瑣的內容，還有配置Repo 工具和路徑 這裏不得不說一下，Archlinux的優點 Aur,得益於此,我們僅需安裝兩個package,在這兩個package當中包含了我們所需的所有package，在此之前我們需開啟32位庫\n開啟32位庫 sudo vim /etc/pacman.conf #[multilib] #Include = /etc/pacman.d/mirrorlist 更改為\n#[multilib] #Include = /etc/pacman.d/mirrorlist 安裝所需套件 yay -S lineageos-devel android-devel ADB 工具包 在windows 系統中我們可能需要配置環境，而在 ArchLinux 當中， 我們僅需安裝一個package\nsudo pacman -S android-tools 三星Odin 在Linux 系統上，我們無法使用帶gui 的odin3,但是我們有odin4,這不是開玩笑而是真的有\nyay -S odin4-cli odin4 -a ~/Downloads/twrp-t2q-20240324-1620.tar -s ~/Documents/t2q_patched_vbmeta.tar # 刷twrp odn4 -h # 可以查看更多，也可以刷Rom odin4 -b BL_XXXX.tar.md5 -a AP_XXXX.tar.md5 -c CP_XXXX.tar.md5 -s CSC_XXXX.tar.md5 -d PATH_OF_DEVICE_A # 刷固件 Pixel 刷官方固件 Pixel 有兩種途徑刷寫官方固件，一個是OTA包，另一個是工廠鏡像 factory image OTA Factory Image 開啟USB 調試 設定=\u0026gt;關於手機=\u0026gt;版本號, 連續點版本號5,6次進入開發者模式\n設定=\u0026gt;系統=\u0026gt; 開發者選項=\u0026gt;USB 調試 ，選擇開啟\n將手機使用USB線連接到筆電上，在手機上允許USB 調試\nadb devices\nOTA adb reboot recovery 當你看到一個 Android 機器人，按住電源鍵再點擊音量增加鍵，使用音量鍵選擇Apply Upldate From ADB, 再使用電源鍵確定\nadb sideload path_to_OAT.zip Factory Images 下載工廠鏡像並解壓，進入其文件夾,連接手機到筆電\nadb reboot bootloader #重啟至Bootloader模式 bash flash-all.sh ","date":"2024-05-09T00:54:15+08:00","image":"http://localhost:1313/p/android-rom-%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/Factory_image_hufae30d1c5b09df65bdfbb9ac1a1c4fee_173784_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/zh-tw/p/android-rom-%E5%9F%BA%E7%A4%8E%E9%85%8D%E7%BD%AE/","title":"Android Rom 基礎配置"},{"content":"前言 原本我想借編程隨想文章的標題 學習與人生 ,但仔細想想還是算了,這篇文章我並不想過多敘述, 本想用這幾天的感想帶過這篇文章,但斟酌片刻之後便打消此念頭,還是要寫一些內容\n讀書 來自新世界 在四月,我讀完了 來自新世界 這本書,這本書主要講了一些覺醒超能力的人類掀起了凡人與超人的戰爭,最後超人完勝,隨着超人獲勝,超人發現他們每個人都是一顆定時的原子彈,便通過基因改造的技術加入了槐死機制的基因 =\u0026gt;只要殺死同類自己便一同死去;世界上僅存的人類分佈零散分佈在世界各地,他們大多數組成烏托邦式的部落,而書中的日本分爲9個部落,各個部落幾乎不聯絡,過得與世隔絕的生活,生活的方方面面都有倫理委員會支配,只有內部人員才會知道他們彼此的身份,倫理委員會害怕出現異類從而危害整個部落,他們不會把不滿18歲的人當作完整的人,若未成年期間出現異樣,他們便會抹去其存在;超人統治世界的同時,一批進化成人形態的化鼠爲新一代人類任勞任怨並成爲他們的奴隸,他們除了長得像老鼠且醜陋與人類並無多少差異,實際上他們是沒有超能力的人類;後來化鼠從小偷竊並培養人類的嬰兒,讓他們認爲自己是化鼠,未來並運用於戰場上,人類無法攻擊化鼠培養的人類,而人類可以.最後,主角拯救了所有人打敗了化鼠,但是化鼠也是人類的祕密,只有少數人知道. 在網絡上很多人說是反烏托邦小說,實際上也是反殖民.\nCSAPP CSAPP 中文翻譯深入理解計算機系統準確來說是以程序員視角瞭解計算機,書的第一章,自己完完整整地看完了,但是第二,第三是通過視頻完成了,一章大概100頁,一頁一頁地看實在是太累太耗時間了,或許我應該考慮精讀\n刷題 上一週,我基本每天刷幾道leetcode 題,但最近都沒怎麼刷, 應該考慮刷幾道,畢竟我甚至不熟悉一些算法\n情感 原則上我是不會寫這方面的內容,但正是因爲Darling 昨晚一句 ** 我可以看看嗎**, 我寫了一晚上; 有個人在牽掛着,我寫Blog 也有一定的動力;最近些日子Darling 在忙碌着她的作業與論文,而我總是顯得無所事事,無憂無慮,前幾天她主動找我而我剛好和室友開一把遊戲,我讓她等20分鐘,實際上這時間是40分鐘,最後她去忙她的作業了,我對此感到十分懊悔;那天晚上她更新了她的頭像,我看到她開心的樣子莫名感到心酸,讓我想起了那句話 \u0026ldquo;任何肌肉太過用力都會因爲在分解釋放能量時缺氧而形成乳酸,於是就會有酸痛感, 那麼內心的那些滿滿的酸楚,也是因爲太過用力嗎\u0026rdquo;. 我很享受和Darling的時光, 因爲有她,我心會莫名地感受到一種不知道如何形容的感覺,或者這就是愛情,你看不到它的存在也摸不到,但是你可以感受到. 我希望可以陪她多一些時間,也希望她堅強一些,不要捉個無法登陸考試就哭的愛哭鬼;3 ,也希望她健健康康,開開心心.早安,親愛的,你還好嗎 愛你的盧致上\n結語 盧要多寫一些文章,把這些類似的文章覆蓋掉,不然我的Blog 要變成和Darling的戀戀筆記本了\n","date":"2024-05-04T08:03:05+08:00","image":"http://localhost:1313/p/%E5%9B%9B%E6%9C%88%E7%9A%84%E6%80%BB%E7%BB%93--to-darling/imposter_factory_huda4c57261821735b7299c99bde243fc3_369115_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/zh-tw/p/%E5%9B%9B%E6%9C%88%E7%9A%84%E7%B8%BD%E7%B5%90/","title":"四月的總結"},{"content":"緣起 四月下旬,一次偶然的機會在Twitter 上面看到一份招聘信息,工作內容剛好合我意且剛好可以當做自己歷練的地方,經過詢問得知他們也收實習生;便從網路上下載一份模板經過簡單修改投遞到要求郵箱;再者由於之前暑假經驗,放假之後再找工作太遲了\n過程 第一次打電話過來,問我是否是本人需要面試;我們便約定第二天下午進行電話面試;在面試之前,我並沒有做任何準備,現在想起十分後悔; 在面試期間, 面試官跟我說面試可能需要一個小時,而我們半個小時就草草結束, 可見我的水平有多爛.不過面試官知道我的水平,一些問題並未刁難我,不過我也爲此感到羞愧,自己沒做好充分準備;再找便是在簡歷上我寫了瞭解網路協議,實際上我只瞭解ssh 剩下的內容基本上全都忘光光了\n面試官提問內容 linux 系統如何在終端查看進程,內存,cpu的佔用情況 linux 系統桌面app的開啓是如何實現的 linux系統上某個app 的可執行文件或目錄存放在哪裏 還有archlinux 的包是如何打包的 兩臺不在同一網路的設備情況下如何用ssh 連接 go 是什麼語言,應用與那些方面 vue vue的問題,我是真的不會,才剛學vue 不久 線程與進程的區別 bash 腳本實現某些經常調用的代碼設定爲固定的值 類似如此?\n1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash # 遍历所有参数 for device in \u0026#34;$@\u0026#34; do # 如果设备代码是 flame、coral 或 sunfish，则将其设置为固定值 derp if [[ \u0026#34;$device\u0026#34; == \u0026#34;flame\u0026#34; || \u0026#34;$device\u0026#34; == \u0026#34;coral\u0026#34; || \u0026#34;$device\u0026#34; == \u0026#34;sunfish\u0026#34; ]]; then device=\u0026#34;derp\u0026#34; fi # 打印出 lunch 命令 echo \u0026#34;lunch derp_\\$device-userdebug\u0026#34; done 結語 這次面試並沒有考我算法題, 五一之後還會有一場面試,所有在五一這幾天,我還要準備一番\n","date":"2024-05-04T07:16:07+08:00","image":"http://localhost:1313/p/%E9%9D%A2%E8%A9%A6%E7%B6%93%E6%AD%B7/linux_hu328fd905c00de5c48c9d0e1c05a773d7_4576_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/zh-tw/p/%E9%9D%A2%E8%A9%A6%E7%B6%93%E6%AD%B7/","title":"面試經歷"},{"content":"緣起 原本有一篇文章是關於如何使用github page 搭建部落格,由於配置系統的時候丟失了,故今日快速重寫一篇,順便藉此提高自己寫作的速度,下載就以stack 爲例\n準備 準備一個github 賬戶,如果沒有就註冊一個 創建兩個repo, 一個名爲hugo-stack, 另一個爲github.用戶名.\u0026gt; 安裝hugo Windows 系統可以參考此鏈接 或者官方文檔 ArchLinux: sudo pacman -S hugo 其他發行版使用自帶包管理工具直接安裝 hugo即可 開始 生成一個hugo 工作資料夾 1 hugo new site hugo-stack # hugo-stack 爲資料夾名稱 初始化repo及將stack 主題以submodule形式clone到本地 1 2 git init git submodule add https://github.com/CaiJimmy/hugo-theme-stack themes/hugo-theme-stack 將stack 主題的配置copy 到根目錄 1 2 3 4 5 6 7 8 cp -r themes/hugo-theme-stack/exampleSite/content ./ cp -r themes/hugo-theme-stack/exampleSite/config.yaml ./ cp -r themes/hugo-theme-stack/archetypes ./ cp -r themes/hugo-theme-stack/data ./ cp -r themes/hugo-theme-stack/assets ./ cp -r themes/hugo-theme-stack/i18n ./ cp -r themes/hugo-theme-stack/layouts ./ cp -r themes/hugo-theme-stack/assets ./ 運行博客 hugo server -D 在終端按住Ctrl 鍵點擊 http://localhost:*/ 開啓預覽網站,或者複製 http://localhost:*/ 粘貼到瀏覽器開啓,* 代表系統分配的端口名 簡單配置Blog 按需修改以下配置,添加到根目錄的config.yaml\n默認語言與域名配置 1 2 3 4 5 6 7 baseurl: https://github.用戶名.io ## hugo 生產靜態網頁存放的域名 languageCode: en-us theme: hugo-theme-stack paginate: 5 defaultContentLanguage: zh-tw # 默認語言 title: Black Lu # 標題 修改副標題和頭像 1 2 3 4 5 6 7 sidebar: emoji: 🍥 subtitle: 我的語言之局限，即是我的世界之局限 # 副標題 avatar: enabled: true local: true src: img/avatar.png #頭像存放在根目錄的 assets/img 下 添加最後更新與 字段 1 2 3 dateFormat: published: Jan 02, 2006 lastUpdated: Jan 02, 2006 15:04 MST 推送到遠程repo 將目錄推送到 hugo-stack repo 1 2 3 4 5 6 git init git add . git commit -m \u0026#34;Intitial commit\u0026#34; git branch -M main git remote add orgin git@github.com:LucasBlackLu/hugo-stack.git git push -u origin main 將 Pulic 的內容推送到 github.用戶名.io repo 1 2 3 4 5 6 7 cd public git init git add . git commit -m \u0026#34;Intitial commit\u0026#34; git branch -M main git remote add orgin git@github.com:LucasBlackLu/lucasblacklu.github.io.git git push -u origin main Public 資料夾裏面的是構建靜態網頁的資源,直接push 到 github.用戶名.io Repo, 在瀏覽器輸入 github.用戶名.io 即可查看你部署好的Blog 注意事項 Page Bundle hugo使用Page Bundle 的文件結構，如下\n1 2 3 4 5 6 tree archlinux_install /archlinux_install ├── arch.png ├── etcher.png └── index.md 新建文章命令爲 1 hugo new post/new_post/index.md # new_post 改成你文章的英文名字 結語 本文主要是爲填補以前挖下的坑,剩下的坑還有git, rom 編譯等,祝各位好運\n參考與致謝 在 GitHub 部署 Hugo 靜態網站 如何在 Windows 系統上快速安裝 Hugo Hugo 官方文檔 ","date":"2024-05-04T05:05:04+08:00","image":"http://localhost:1313/p/hugo--github-page-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E9%83%A8%E8%90%BD%E6%A0%BC/pawel_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/zh-tw/p/hugo--github-page-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E9%83%A8%E8%90%BD%E6%A0%BC/","title":"Hugo + Github Page 快速搭建部落格"},{"content":"起因 在我尚未上高中時候，在群組裏就有人直接使用路由器進行翻牆上網，當時就十分好奇如何實現\n原理是在路由層面進行網路代理，從而免去終端設備使用vpn等進行代理也不易被檢測，可以理解爲更高層次的代理手段; 且大多數需要自行刷官改固件或第三方固件 只可惜當時家裏的路由器老舊且無第三方修改固件，且年紀尚輕並無過多金錢置買較好的路由器，上高中之後父母商議與諾更換家裏老舊的路由器 紅米 AX5路由, 後面才得知需要筆電或者是帶無線網卡的電腦才可以刷固件，遂放棄;後面大學時候擁有人生第一臺筆電，但很少時間待在家裏便不再折騰\n準備 在koolcenter 搜尋RT-AC86U並下載固件 開啓MerlinClash ,查看自己設備支持的軟體版本,進入Telegram 群組 下載對應版本的插件 配置 接上電源，然後用牙籤或者針插入路由器背後的Reset 小孔長按大約30s恢復出廠設定 按照官方文檔連接網路，如下圖 ！doc [如果你與我一樣使用烽火CPE，僅需使用網線將烽火的LAN口連接到路由的WAN口] 電腦端在瀏覽器輸入 192.168.50.1,也可以手機連接RT-AC86U的WiFi 同樣在瀏覽器輸入192.168.50.1,進行網路設定 刷機 在chromium 內核的瀏覽器輸入 192.168.50.1 進入路由器管理頁面, 系統管理=\u0026gt; 固件升級,點擊上傳固件選擇下載的固件,此過程需要耐心等待 完成之後, 系統管理=\u0026gt;系統設定, 選擇開啓 \u0026ldquo;Format JFFS partition at next boot\u0026rdquo;, 和\u0026quot;Enable JFFS custom scripts and configs\u0026quot;,下滑到頁面最後點擊應用本頁面設定 [安裝插件需要軟體中心, 而軟體中心需要開啓 JFFS 設定] 插件安裝 軟體中心 =\u0026gt; 手動安裝 =\u0026gt; 離線安裝插件安裝 =\u0026gt; 選擇文件, 選擇已下載的 MerlinClash 插件 [軟體中心=\u0026gt; 全部軟體 可以在線安裝插件,軟體中心=\u0026gt; 手動安裝, 離線安裝插件即安裝軟體中心沒有的插件] 配置 MerlinClash 下載ClashVerge 或者是其他的pc端Clash, 訂閱導入 你的訂閱鏈接 右鍵點擊打開文件,找到其.yaml 文件所在位置,複製到其他目錄並重命名爲*.ymal, *要求15個字符以內 軟體中心 =\u0026gt; 已安裝 =\u0026gt; MerlinClash =\u0026gt; 打開=\u0026gt; 配置文件 =\u0026gt;配置文件選擇並導入 詳細配置可查看官網配置 參考及致謝 固件下載 獲取插件的Telegram 群組 固件刷寫教程 插件配置教程 ","date":"2024-05-03T21:18:02+08:00","image":"http://localhost:1313/p/%E5%8D%8E%E7%A1%95-rt-ac86u-%E9%85%8D%E7%BD%AE/AC86U_hu04da5977f4f2cc7d3dbbf8f84ab951f6_5978_120x120_fill_q75_h2_box_smart1_2.webp","permalink":"http://localhost:1313/zh-tw/p/%E8%8F%AF%E7%A2%A9-rt-ac86u-%E9%85%8D%E7%BD%AE/","title":"華碩 RT-AC86U 配置"},{"content":"緣起 在部署完成博客之後一直有對Blog進行大改的想法，無奈自己懶惰的緣由以及stack 主題有一些小問題導致問題一直遺留至今\n問題 Stack 主題在content裏面的內容會與根目錄下的文件衝突，而現在已經沒有類似的問題，配置方式如下\n1 2 3 4 5 6 7 8 cp -r themes/hugo-theme-stack/exampleSite/content ./ cp -r themes/hugo-theme-stack/config.yaml ./ cp -r themes/hugo-theme-stack/archetypes ./ cp -r themes/hugo-theme-stack/data ./ cp -r themes/hugo-theme-stack/assets ./ cp -r themes/hugo-theme-stack/i18n./ cp -r themes/hugo-theme-stack/layouts ./ cp -r themes/hugo-theme-stack/assets ./ 頭像存放在根目錄的 assets/img 資料夾內,一些配置需要自己配置config.yaml 修改 此次Blog修改主要借鑑自Hugo Stack主题装修笔记 和Stack主题的自定义 ，本人只借鑑部分內容且大部分內容爲複製粘貼就不一一敘述了，詳情請仔細瀏覽上面的鏈接\n參考及致謝 Hugo stack 主題 Hugo Stack主题装修笔记 Stack主题的自定义 ","date":"2024-05-03T05:12:33+08:00","image":"http://localhost:1313/p/hugo-stack-%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/hugo_hud8e8095028aee5d3955c996bc629e075_99747_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/zh-tw/p/hugo-stack-%E4%B8%BB%E9%A1%8C%E9%AD%94%E6%94%B9/","title":"Hugo Stack 主題魔改"},{"content":"合並兩個有序鏈表 1,初始時,合並的鏈表 preHead 為空\n1 2 3 ListNode* preHead = new ListNode(0); ListNode* prev = preHead; 2,設定邊界,比較 l1​與 節點的值,若l1​ 的值小於於 l2​的值則 pre的 next 指針指向 l1​,更新 l1​ 的位置為l2​的 next指針指向的位置,否則將 prev 的 next 指針指向 l2，並將 l2 的位置更新為 l2 的下一個節點,將 l1,l2視為一個節點而不是 鏈表\n‍\n‍\n1 2 3 4 5 6 7 8 9 10 while (l1 != nullptr \u0026amp;\u0026amp; l2 != nullptr) { if (l1-\u0026gt;val \u0026lt; l2-\u0026gt;val) { prev-\u0026gt;next = l1; l1 = l1-\u0026gt;next; } else { prev-\u0026gt;next = l2; l2 = l2-\u0026gt;next; } prev = prev-\u0026gt;next; } 3,此時，l2​ 已經為空，因此直接將 l1​ 的剩余部分連接到 prev​ 上。\n1 2 3 4 5 6 7 8 9 10 11 12 // 處理剩余節點： 若其中一個鏈表已經遍歷完畢，則直接將另一個鏈表的剩余部分連接到 prev 上 prev-\u0026gt;next = l1 == nullptr ? l2 : l1; // 這行代碼的邏輯可以理解為： if (l1 != nullptr) { prev-\u0026gt;next = l1; } if (l2 != nullptr) { prev-\u0026gt;next = l2; } # 返回指向合並後鏈表的第一個節點的指針，以完成合並兩個有序鏈表的函數，並將合並後鏈表的頭節點返回供調用者使用 return preHead-\u0026gt;next; ‍\n","date":"2024-03-23T00:00:00Z","permalink":"http://localhost:1313/zh-tw/p/%E5%90%88%E4%B8%A6%E5%85%A9%E5%80%8B%E6%9C%89%E5%BA%8F%E9%8F%88%E8%A1%A8/","title":"合並兩個有序鏈表"},{"content":"前言 過去幾個月當中，我搭建部落格都是使用Github Page的方式搭建且域名無法自定義，從朋友中得知可以用CloudFlare搭建，不僅簡單且可以自定義域名，那我們開始吧\n部署 GitHub Page 使用Hugo框架快速部署Meme主題的部落格非常容易。我原本是採用GitHub Page的形式，只需要幾步就能成功部署。我自己的部落格也是用這個方式搭建，不過自定義域名要花點心思（PS：我自己也沒整自定義域名，不想花錢買）\n參考在 GitHub 部署 Hugo 靜態網站 CloudFlare 在和Atom的通話中得知，耗子的部落格也是使用CloudFlare託管的，所以我們便打算使用Cloud Flare託管\n購買域名 可以在Name Cheap 或者Name Silo 購買域名，我們是在Name Cheap上買的域名；如果是我會在Name Silo，因為可以直接用支付表買單。\n配置DNS 由於我們是使用CloudFlare Page 託管我們的網站，所以域名購買之後需要使用Could Flare解析，解析域名可能需要一定的時間請耐心等待\n參考 在CloudFlare上解析自己的域名 部署部落格 部署部落格需要一個GitHub Repo，Public或者Private都可以，使用CloudFlare 還有一個好處就是可以自定義二級域名\n參考 Cloudflare Pages 提供無限流、無限容量，免費網頁空間，同時還可綁定自己的網域名稱架設教學 Post文註意事項 Page Bundle 我們都是用markdwon檔案，語法基本上大家都熟悉就不過多描述，主要是說明我們要使用Page Bundle 的形式，而不是簡單地寫個md檔案。特別是針對有普通的文章，如下\ntree archlinux_install /archlinux_install ├── arch.png ├── etcher.png └── index.zh.md 多語言 由於使用了Hugo的多語言配置，所以我的部落格content內容有所改變，如下\ntree content /content ├── en ├── vi ├── zh-tw └── zh-cn 總結 以上就是本篇文章的所以內容，引用內容有點多，但實際操作並不口難，熟悉之後便可半小時之內完成，寫這篇文章對於不太習慣寫作的我而言，可能就要更長對時間了，感謝你花時間看完我的部落格，希望這篇文章能夠給你帶來一些啟發和幫助。\n","date":"2023-07-31T00:00:00Z","image":"http://localhost:1313/p/%E4%BD%BF%E7%94%A8cloudflare-page-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/cloudflare_page_hu5054031d3ab24de388b3c7dbfa85f7ca_16941_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/zh-tw/p/%E4%BD%BF%E7%94%A8cloudflare-page-%E6%90%AD%E5%BB%BA%E9%83%A8%E8%90%BD%E6%A0%BC/","title":"使用Cloudflare Page 搭建部落格"},{"content":"前言 近一些天，發現自己不僅失眠而且注意力分散，且無法專注看完一本\n失眠 最近老是失眠，以前的時候是下午睡覺然後在晚上敲敲代碼，編譯系統去看看有什麼 Bug 需要修或者去 pick 別人的代碼，現在完全不行了，彷彿是日夜顛倒，成功過上美國人的生活，但身體和精神狀況卻越來越糟；甚至成了曠課大王，真的是惡夢啊\n2024.5.4 其實失眠也沒那麼可怕,假如睡不着就找一些事情做,保持充足的睡眠時間即可; 最好的睡眠方法是讓自己疲憊; Rom 編譯的事情可以留在白天在做,給自己一個安穩的睡眠吧\n注意力分散 這個問題已經是老生常談，在互聯網下充斥著短視頻和社交媒體，很難集中精力學習。以前我以為是短視頻所以戒掉 Tiktok 之類的短視頻 App 或者關掉其功能；短視頻，使得人們難以擺脫這種短暫的刺激，導致注意力分散和學習效果不佳。\n假如因爲其他事情而導致注意力分散,那麼先做完其他事情吧,不然一心二用只會竹籃打水\u0026ndash;一場空\n不論我用手機還是筆記本看書在都會感覺到困，但是在晚上看手機卻不會，不知道怎麼回事，可能是 OLED 螢幕的問題？ 看書最好不要疲憊\nHaskell 言歸正傳，注意力分散實際上就是專注力下滑，如我之前一直在學的 Haskell，我從 YouTube 上面發現了Learn You A Haskell For Great Good 這本書就開始看了一週時間，大致懂了，但是還是無法解開 exercism 練習題裡麵的第二題；後來，在 Telegram 上面的某個群組裡麵得知學 Haskell 建議去 看 [The Real World Haskell ]（https://rwh.readthedocs.io/en/latest/）；\n雖然他說 Rust 寫起來比 Haskell 更好 但是我是主要是想通過學 Haskell 學習 Functional Program，因此還是會選擇 Haskell 作為學習語言。 Haskell 確實是很好的學習 Functional Program 的語言，只是 Rust 也有其獨特的優勢。我覺得都可以試試看，根據個人興趣和需求做決定。值得一試的語言，多學習才能拓寬自己的視野。此注釋由 AI 生產出。 與其專研一些獨樹一幟的編程語言不錯,但還是得把握好學習的重心\n反思 最近失眠已經影響到日常的課程和自己的生活作息，所以需要加以調整，不然容易形成不好的習慣；加上自己的注意力分散，學不到什麼東西，只能虛度光陰，現在還在謀求解決方案 方法其實心裏已經知道,只是沒有下定決心去做; 事情進度慢一些也無妨,至少比什麼都不做好\n","date":"2023-07-31T04:37:58+08:00","image":"http://localhost:1313/p/%E5%A4%8F%E6%97%A5%E4%B9%8B%E6%83%91/photo_2023-12-11_01-36-08_hu9ff7ba776453248539ee3997c5e3c952_56613_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/zh-tw/p/%E5%A4%8F%E6%97%A5%E4%B9%8B%E6%83%91/","title":"夏日之惑"},{"content":"前言 近一些天，發現自己不僅失眠而且注意力分散，且無法專注看完一本\n失眠 最近老是失眠，以前的時候是下午睡覺然後在晚上敲敲代碼，編譯系統去看看有什麼 Bug 需要修或者去 pick 別人的代碼，現在完全不行了，彷彿是日夜顛倒，成功過上美國人的生活，但身體和精神狀況卻越來越糟；甚至成了曠課大王，真的是惡夢啊\n注意力分散 這個問題已經是老生常談，在互聯網下充斥著短視頻和社交媒體，很難集中精力學習。以前我以為是短視頻所以戒掉 Tiktok 之類的短視頻 App 或者關掉其功能；短視頻，使得人們難以擺脫這種短暫的刺激，導致注意力分散和學習效果不佳。言歸正傳，注意力分散實際上就是專注力下滑，如我之前一直在學的 Haskell，我從 YouTube 上面發現了Learn You A Haskell For Great Good 這本書就開始看了一週時間，大致懂了，但是還是無法解開 exercism 練習題裡麵的第二題；後來，在 Telegram 上面的某個群組裡麵得知學 Haskell 建議去 看 [The Real World Haskell ]（https://rwh.readthedocs.io/en/latest/）；\n雖然他說 Rust 寫起來比 Haskell 更好 但是我是主要是想通過學 Haskell 學習 Functional Program，因此還是會選擇 Haskell 作為學習語言。 Haskell 確實是很好的學習 Functional Program 的語言，只是 Rust 也有其獨特的優勢。我覺得都可以試試看，根據個人興趣和需求做決定。值得一試的語言，多學習才能拓寬自己的視野。此注釋由 AI 生產出。 不論我用手機還是筆記本看書在都會感覺到困，但是在晚上看手機卻不會，不知道怎麼回事，可能是 OLED 螢幕的問題？\n反思 最近失眠已經影響到日常的課程和自己的生活作息，所以需要加以調整，不然容易形成不好的習慣；加上自己的注意力分散，學不到什麼東西，只能虛度光陰，現在還在謀求解決方案\n","date":"2023-06-26T00:00:00Z","image":"http://localhost:1313/p/%E5%A4%B1%E7%9C%A0/sleepless_hu4f2da5504e57e65493a1aeca122ea786_134643_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/zh-tw/p/%E5%A4%B1%E7%9C%A0/","title":"失眠"},{"content":"前言 最近在瞎折騰，什麼內核啊，再什麼onedrive網盤，還有什麼自定義域名當郵箱，反正是屁事一堆，什麼都是做一半;\n落實 明天打算把onedrive整了，然後再看看吧，email差不多可以了，可以裝裝門面\n感想 最近幾天，真的很感謝Darling陪我，有時候啥也不想幹或者沒有動力，每次和Darling交談之後心情都變得很愉悅，而且滿血復活;希望Darling身體無恙，開心每一天。\n","date":"2023-05-26T05:02:28+08:00","image":"http://localhost:1313/p/%E8%BF%99%E5%87%A0%E5%A4%A9%E7%9A%84%E6%84%9F%E6%83%B3/photo_2023-05-13_21-54-26_hu7a4131a4c9a2df158e1444246d7033e6_85295_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/zh-tw/p/%E9%80%99%E5%B9%BE%E5%A4%A9%E7%9A%84%E6%84%9F%E6%83%B3/","title":"這幾天的感想"},{"content":"前言 本來有寫這個博客的想法，但無奈最近時間比較忙\n一心想去編譯Samsung內核，中間一波多折.\n故一拖再拖。幸好最近內核的進程一直擱置，我就打算今晚扔到Stackoverflow然後收穫一堆downvote，或者去XDA看看。\n材料準備 電腦，U盤各一個，在ArchLinux官方 選擇鏡像站下載鏡像，用Etcher 製作啓動U盤\nEtcher 有個非常好的優點——全平臺兼容，醬紫就不怕出現在Linux很難製作Windows啓動U盤的尷尬場面。 安裝步驟 製作啓動盤 打開Etcher 直接選擇iso文件再選擇U盤安裝即可 進入BIOS 每個主板或筆電進入BIOS的方法,各不相同故請自行Google 記得在BIOS裏面關閉secure boot\n連接網路 有線網路 接上網路，稍等片刻即可\n無線網路 iwctl #進入無線網路工具 device list # 列出網路設備 通常爲Wlan0 station wlan0 scan #掃描無線網路 station wlan0 get-networks #列出可用無線網路 station wlan0 connnect WiFiname WiFiname 爲WiFi 名稱，輸入一部分可用Tab補全，然後輸入密碼回車，最後輸入exit退出 測試網路連接是否正常 ping www.bing.com 設定鏡像網站 把我们要设定的镜像站放在前面\n使用上下左右鍵移動，按i輸入文字，改好後按Esc，再輸入「:wq」退出VIM 如果真的不會如何使用vim那就Google一下再回來吧 vim /etc/pacman.d/mirrorlist #打開文件按需求把下面的源加進去 中國大陸用戶設定清華源和中科大即可\n#China Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch 臺灣用戶的可用使用\nServer = https://mirror.archlinux.tw/ArchLinux/$repo/os/$arch 分割磁盤 archlinux安裝需要分三個分區\nefi分區 512MB.\nswap分區 運存的60%\n主分區 剩餘部分即爲主分區 .\n下面將會把磁盤轉化爲gpt格式，固態硬盤一般爲nvme0n1，我們是直接但系統故直接裝在固態硬盤\nlsblk #顯示分區情況 parted /dev/nvme0n1 (parted)mktable #輸入mktable New disk label type? gpt #輸入gpt 輸入yes即可 quit #退出 下面將會用cfdisk分割磁盤，efi分區格式type爲 EFI Ssystem，Swap分區爲Swap System，主分區爲Lnux System\ncfdisk /dev/nvme0n1 #執行分割分區大小，類型 fdisk -l 配置分區 mkfs.vfat /dev/nvmexn1p1 #格式化EFI分區 mkfs.ext4 /dev/nvmexn1p3 # 格式化主分區爲ext4 mount /dev/nvmexn1p3 /mnt #掛載主分區到/mnt mkdir -p /mnt/boot/efi mount /dev/nvmexn1p1 /mnt/boot/efi #掛載efi分區 mkswap /dev/nvmexn1p2 swappon /dev/nvmexn1p2 #設定Swao分區 fdisk -l #查看分區掛載是否正確 用pacstrap安裝基本Linux檔案系統base、核心linux pacstrap /mnt linux linux-firmware linux-headers base base-devel vim 生成fstab genfstab -U /mnt \u0026gt;\u0026gt; /mnt/etc/fstab 檢視掛載狀況 cat /mnt/etc/fstab chroot到系統。 arch-chroot /mnt 設定主機名和時區 首先在/etc/hostname設定主機名字 vim /etc/hostname #輸入ArchLinux 再：wq保存退出即可 ArchLinux 爲主機名\n在vim /etc/hosts配置hosts 127.0.0.1 localhost ::1 localhost 127.0.1.1 ArchLinux.localdomain ArchLinux 設定時區 ln -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime # 設定臺北爲時間同步時區 二選一 ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime # 設定上海爲時間同步時區 硬體時間 用命令將同步時間設定到硬體\nhwclock --systohc 安裝微碼 pacman -S intel-ucode # Intel pacman -S amd-ucode # AMD 設定locale 編輯 /etc/locale.gen，去掉 en_US.UTF-8 UTF-8 以及 zh_CN.UTF-8 UTF-8 tw_CN.UTF-8 UTF-8\nvim /etc/locale.gen locale-gen 在 /etc/locale.conf 設定爲英文，防止亂碼\necho 'LANG=en_US.UTF-8' \u0026gt; /etc/locale.conf 安装桌面程式 安装基本软体 pacman -S sudo networkmanager vim firefox noto-fonts-cjk noto-fonts-emoji pacman -S xorg xorg-server pipewire intel-ucode nvtop pacman -S fcitx5-im fcitx5-chewing fcitx5-qt fcitx5-gtk fcitx5-chinese-addons pacman -S git openssh fakeroot base-devel 安装gnome 桌面 pacman -S gnome gdm 安装KDE桌面 pacman -S sddm plasma-meta kde-applications plasma-wayland-session sddm 为kde桌面的登錄管理器，而gdm为gnome的， 两个桌面二選一即可 僅適用於我的華碩vivobook筆電的聲卡軟體\n如果聲卡不行，可以去arch.wiki查詢 sudo pacman -S sof-firmware sudo pacman -S alsa-ucm-conf 爲Root用戶設定密碼 passwd root 配置Root用戶默認編輯器 在git 和visudo archlinux會使用vi而不是vim，有時候會出錯，所以需要設置默認編輯器 vim ~/.bash_profile export EDITOR='vim' 創建普通用戶 username 爲用戶名，可自行改成自己的名字如 black useradd -m -G wheel -s /bin/bash username passwd user # 設定普通用戶密碼 給予普通用戶sudo權限 EDITOR=vim visudo # 設定visudo的編輯器爲vim,上面的配置尚未生效 找到這行#%wheel ALL=(ALL:ALL) ALL，並把前面的註釋符 # 去掉 設定開機服務 systemctl enable sddm.service #kde桌面需要 systemctl enable gdm.service #gnome桌面需要 systemctl enable NetworkManager.service #網路管理員，會自動處理網路連線變更 systemctl enable sshd.service #ssh服務 sudo systemctl enable --now bluetooth 啓用藍牙服務(若有) 安裝引導程式 安裝對應的軟體 pacman -S grub efibootmgr 安装grub 到EFI分区 grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ARCH 生成grub所需文件 grub-mkconfig -o /boot/grub/grub.cfg 系統安裝完成。退出chroot，取消掛載，重啓 exit umount /mnt reboot 重啓 系統後續安裝優化 配置中文輸入法 sudo vim /etc/environment 把下面這幾行加入即可\nGTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx SDL_IM_MODULE=fcitx GLFW_IM_MODULE=ibus Clash for windows 代理軟體 開啓Clash for windows GitHub倉庫 ，下載含linux字符文件並解壓運行cfw即可，如有不明之處可查看官網 pacman套件管理員使用方式 pacman 相當於ubuntu 的apt-get,此節列出Arch Linux的套件管理員pacman的常用指令。\n搜索線上倉庫軟體\nsudo pacman -Ss \u0026lt;套件名稱\u0026gt; 用此指令安裝套件\nsudo pacman -S \u0026lt;套件名稱\u0026gt; 移除套件\nsudo pacman -R \u0026lt;套件名稱\u0026gt; 以下指令會更新整個系統的套件。因為Arch Linux是滾動發行版，建議每半個月進行一次全系統更新。更新前建議看ArchLinux的新聞有無嚴重bug再更新。\nsudo pacman -Syu 強制同步套件庫。某個套件無法下載的時候才執行此指令。\nsudo pacman -Syu 刪除本機套件快取 sudo pacman -Sc\n查看本地已安裝套件\nsudo pacman -Qt 可用來移除桌面冗餘的套件\n安裝AUR套件管理員 AUR (Arch User Repository) 是Arch Linux官方套件庫以外的主要套件來源。AUR沒有收錄套件檔案，只有編譯套件的設定檔。AUR套件最直接的裝法是手動git clone儲存庫，然後檢查依賴項目，再用makepkg指令打包安裝。\n但是這樣太麻煩了，所以我們通常會安裝一個AUR Helper來自動化處理，我使用yay，語法跟pacman很像\nsudo pacman -S --needed git base-devel git clone https://aur.archlinux.org/yay.git cd yay makepkg -si yay 安裝套件\nyay -S google-chrome # 按下Enter同意安裝，並按照螢幕提示輸入密碼 yay 移除套件\nyay -R google-chrome 更新所有AUR套件，並順便更新整個系統的套件：\nyay -Syu 自用gnome 插件 先安裝gnome-browser-connector\nyay -S gnome-browser-connector blur-my-shell 模糊抽屜界面不再是灰色 Caffeine 禁用熒幕保護和自動暫停 Clipboard Indicator 剪貼板管理器，記錄你複製過的內容 Coverflow Alt-Tab 此插件可以實現Mac系統的快速切換任務且自帶流暢切換動畫 Dash to Dock 固定Dock欄，gnome在某次更新砍了這個功能\nExtension List 在狀態欄開啓插件清單\nOpenWeather 在頂欄顯示天氣狀況\nVitals 一個很好用的插件可快速查看系統的CPU，Ram，存儲佔用狀況\nAndroid 刷機工具 sudo pacman -S android-tools 配置Android Rom 編譯環境 這裏不得不說一下，Archlinux的優點Aur,得益於Aur,安裝編譯Android Rom 的套件僅需開啓32位庫\n開啓32位庫支援 vim /etc/pacman.conf 僅需把下面兩行前面的#去掉,輸入：wq保持並推出即可\n#[community] #Include = /etc/pacman.d/mirrorlist sudo pacman -Syyu #更新套件 安裝所需套件 yay -S lineageos-devel android-devel 文章引用 Arch Linux安裝教學，KDE Plasma桌面＋中文輸入法 archlinux 基础安装 如果你感覺Arch很耗電，可以看看這篇文章 ","date":"2023-05-23T14:33:51+08:00","image":"http://localhost:1313/p/archlinux%E5%AE%89%E8%A3%85/arch_hu56f17c9044ea99b37c05eb2feb8e32e6_299626_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/zh-tw/p/archlinux%E5%AE%89%E8%A3%9D/","title":"ArchLinux安裝"},{"content":"前言 早在去年初旬，我就創建了一個Github Pag，打開就一個空白頁面，留下一行字“Lucasblacklu.github.io”，那時候並不知曉什麼主題也不懂什麼Hexo,Hugo。後來，去年剛開學不久看到班上的同學在show他的Blog，於是便粗略的看了一下，自己並沒有什麼想法去搭建；直到後來，在班上的老師展示他的Blog，用hexo和js搭建的，後來便開始了，我自己摸索搭建Blog。剛開始慢慢看教程，然後不斷碰壁，一開始我看到的優質教程是RemBlog的教程 以及啓發RemBlog的教程 ,也就是因爲這個教程，我懂得了如何搭建Hugo Blog，也就是從這裏開始我愛上Hugo的快速部署，而不是Hexo的豐富且美觀的主題。\n一波多折 前面談到Hugo快速，但是缺乏優質主題，畢竟顏值是第一動力，後來我挑了很多個主題，一開始是這個主題stack，但是由於自己不會如何配置，遇上很多問題，例如部署出來的Blog沒有正確顯示主題，也就是CSS配置出錯，但我當時並不知道什麼是CSS，後來又試了好幾個，最後折騰到凌晨，無奈只好選擇一個簡單的主題。之後，我在一個telegram看到一個教程 教人使用三個倉庫，自動化部署Blog僅需上傳markdown文件即可，這對於當時並不瞭解Github Action和Workflow的我，無疑是巨大的誘惑，然後我按照他的教程試了好久還是不行，我甚至都不知道設定Token,後來也就不了了之，之前問過他裏面的bash腳本怎麼使用（還包括sed命令），可是我現在只看懂一些。也是因爲此，於是我便下定決定要搭建個Hugo+Github Action(Github Action暫時出問題，暫時用回兩個倉庫的方式) 的自動化部署Blog,後來在Workflow的多次踩坑當中學會了如何使用Token,加上那段時間在折騰Rom 編譯學會了不少Git和一些Linux 命令。\n最後 我爲什麼又選擇這個主題，是因爲之前在Hugo Shoka碰壁發現，很多是自己的問題，加上我有認識不同國家的人，而Stack支持多語言輸出，只需要寫出一篇中文文章，把他發給chatgpt可以幫忙去潤色，再創建其他語言的markdown文件，例如我原始文件是index.md，英文的則是index.en.md。人的慾望是難以滿足的，最後我是再三抉擇才決定使用Stack主題，未來有更好的，可能是我會選擇遷移到新的主題或新的驅動。再者是爲什麼我默認語言選擇繁體中文，別問,問就是延續之前的我之前傳統\n更新 其實博客主題什麼的都不重要,重要的內容,內容足夠好自然可以吸引讀者,延續一直以來用的博客即可,太累或太懶不想折騰,一昧追求更好看,性能更好或者是其他需求的主題,反而使其寫博客的本心,\n","date":"2023-03-18T22:07:31+08:00","image":"http://localhost:1313/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%BA%A6%E6%88%96%E4%B8%8D%E6%98%AF/Hello-World_huac6442c03371f05f20e9ed69e0c98107_925974_120x120_fill_q75_box_smart1.jpg","permalink":"http://localhost:1313/zh-tw/p/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E4%BA%A6%E6%88%96%E4%B8%8D%E6%98%AF/","title":"第一篇文章亦或不是"}]